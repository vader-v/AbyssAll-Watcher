<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <link id="favicon" rel="icon" href="/images/venti.webp" type="image/png" />
    <title><%= title %></title>

    <script>
      document.addEventListener("DOMContentLoaded", () => {
  const addEnemyButtons = document.querySelectorAll("[id^='add-enemy-floor']");

  addEnemyButtons.forEach((addEnemyButton) => {
    addEnemyButton.addEventListener("click", (event) => {
      const button = event.target;
      const enemyContainer = button.closest(".level").querySelector(".enemy-container");


      if (enemyContainer) {
        const [floorName, levelNumber, halfNumber] = button.id.split("-").slice(3);
        const enemySelect = document.createElement("select");
        enemySelect.name = `enemies-floor-${floorName}-level-${levelNumber}-half-${halfNumber}[]`;
        enemySelect.required = true;
        enemySelect.classList.add("enemy-select");

        const defaultOption = document.createElement("option");
        defaultOption.value = "";
        defaultOption.disabled = true;
        defaultOption.selected = true;
        defaultOption.textContent = "Select Enemy";
        enemySelect.appendChild(defaultOption);

        const initialSelect = document.querySelector(
            "#enemies-container .enemy select"
          )
          const options = initialSelect.querySelectorAll("option")

          // Clone the options and append them to the newly created select input
          options.forEach((option) => {
            const clonedOption = option.cloneNode(true)
            enemySelect.appendChild(clonedOption)
          })

        Array.from(options).forEach((option) => {
          const clonedOption = option.cloneNode(true);
          enemySelect.appendChild(clonedOption);
        });

        const levelInput = document.createElement("input");
        levelInput.type = "number";
        levelInput.name = `levels-floor-${floorName}-level-${levelNumber}-half-${halfNumber}[]`;
        levelInput.value = "60";
        levelInput.min = "60";
        levelInput.max = "120";
        levelInput.step = "10";
        levelInput.required = true;

        const removeButton = document.createElement("button");
        removeButton.type = "button";
        removeButton.classList.add("remove-enemy");
        removeButton.textContent = "Remove";

        removeButton.addEventListener("click", () => {
          enemyContainer.remove();
        });

        const enemyDiv = document.createElement("div");
        enemyDiv.classList.add("enemy");
        enemyDiv.appendChild(enemySelect);
        enemyDiv.appendChild(levelInput);
        enemyDiv.appendChild(removeButton);

        enemyContainer.appendChild(enemyDiv);
      }
    });
  });

  document.addEventListener("click", (event) => {
    if (event.target && event.target.classList.contains("remove-enemy")) {
      event.target.parentElement.remove();
    }
  });

  const toggleButton = document.getElementById("toggle-enemy-list");
  const enemyList = document.getElementById("enemy-list");
if (toggleButton) {
  toggleButton.addEventListener("click", () => {
    enemyList.classList.toggle("hidden");
  });
}

});

    </script>
    
  </head>
</html>
